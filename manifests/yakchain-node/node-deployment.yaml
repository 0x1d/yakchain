apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.24.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: node
  name: node
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: node
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.24.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: node
    spec:
      initContainers:
        - name: init-chain
          image: registry.gitlab.com/zwirbel/yakchain/node
          command: ["sh", "-c", "yakchaind init --overwrite yak-zero --home /home/yak/.yakchain"]
          volumeMounts:
            - mountPath: /home/yak/.yakchain
              name: node-claim0
            - name: config
              mountPath: "/home/yak/config.yml"
              readOnly: true  
      containers:
        - image: registry.gitlab.com/zwirbel/yakchain/node
          name: yak-node
          command: ["sh", "-c", "yakchaind start --home /home/yak/.yakchain"]
          #command:
          #  - yakchaind
          #  - start
          #  - --home
          #  - /home/yak/.yakchain
          ports:
            - containerPort: 26657
            - containerPort: 26656
            - containerPort: 6060
            - containerPort: 9090
            - containerPort: 1317
          resources: {}
          volumeMounts:
            - mountPath: /home/yak/.yakchain/config
              name: config
            - mountPath: /apps
              name: node-claim0
      restartPolicy: Always
      volumes:
        - name: config
          configMap:
            name: yakchain-config
        - name: node-claim0
          persistentVolumeClaim:
            claimName: node-claim0
        - name: node-claim1
          persistentVolumeClaim:
            claimName: node-claim1
status: {}
